<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>SettingsDialog</class>
 <widget class="QDialog" name="SettingsDialog">
  <property name="enabled">
   <bool>true</bool>
  </property>
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>900</width>
    <height>582</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Spivak Karaoke Player Settings</string>
  </property>
  <layout class="QVBoxLayout" name="verticalLayout_8">
   <item>
    <widget class="QTabWidget" name="tabWidget">
     <property name="currentIndex">
      <number>0</number>
     </property>
     <widget class="QWidget" name="tabCollections">
      <attribute name="title">
       <string>Collection</string>
      </attribute>
      <layout class="QVBoxLayout" name="verticalLayout">
       <item>
        <widget class="QGroupBox" name="groupBox">
         <property name="title">
          <string>Collection information</string>
         </property>
         <layout class="QGridLayout" name="gridLayout_2">
          <item row="0" column="0" colspan="3">
           <layout class="QHBoxLayout" name="horizontalLayout_13">
            <item>
             <widget class="QLabel" name="label_7">
              <property name="sizePolicy">
               <sizepolicy hsizetype="Minimum" vsizetype="Preferred">
                <horstretch>0</horstretch>
                <verstretch>0</verstretch>
               </sizepolicy>
              </property>
              <property name="text">
               <string>This is a</string>
              </property>
             </widget>
            </item>
            <item>
             <widget class="QRadioButton" name="boxCollectionTypeFS">
              <property name="text">
               <string>filesystem collection (including mapped dri&amp;ves)</string>
              </property>
              <property name="checked">
               <bool>true</bool>
              </property>
             </widget>
            </item>
            <item>
             <widget class="QRadioButton" name="boxCollectionTypeHTTP">
              <property name="enabled">
               <bool>true</bool>
              </property>
              <property name="text">
               <string>Web collection</string>
              </property>
             </widget>
            </item>
            <item>
             <spacer name="horizontalSpacer_12">
              <property name="orientation">
               <enum>Qt::Horizontal</enum>
              </property>
              <property name="sizeHint" stdset="0">
               <size>
                <width>40</width>
                <height>20</height>
               </size>
              </property>
             </spacer>
            </item>
           </layout>
          </item>
          <item row="1" column="0">
           <widget class="QLabel" name="lblRootDir_2">
            <property name="text">
             <string>Collection name:</string>
            </property>
            <property name="alignment">
             <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
            </property>
            <property name="buddy">
             <cstring>leCollectionPath</cstring>
            </property>
           </widget>
          </item>
          <item row="2" column="0">
           <widget class="QLabel" name="lblRootDir">
            <property name="text">
             <string>Root directory of the local &amp;Karaoke collection:</string>
            </property>
            <property name="alignment">
             <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
            </property>
            <property name="buddy">
             <cstring>leCollectionPath</cstring>
            </property>
           </widget>
          </item>
          <item row="2" column="1" colspan="4">
           <widget class="QLineEdit" name="leCollectionPath">
            <property name="sizePolicy">
             <sizepolicy hsizetype="Expanding" vsizetype="Fixed">
              <horstretch>1</horstretch>
              <verstretch>0</verstretch>
             </sizepolicy>
            </property>
            <property name="whatsThis">
             <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Karaoke songs are typically stored on disk in a specific folder. This folder may contain one or more Karaoke songs, as well as other subfolders containing Karaoke songs. This folder would be your collection root path, and should be specified here.&lt;/p&gt;&lt;p&gt;For example, if you have the following folder structure:&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-style:italic;&quot;&gt;C:\Users\Me\Documents\Karaoke\&lt;br/&gt;C:\Users\Me\Documents\Karaoke\Beatles\Yesterday.kar&lt;br/&gt;C:\Users\Me\Documents\Karaoke\Bee Gees\How deep is your love.zip&lt;/span&gt;&lt;/p&gt;&lt;p&gt;your collection root path would be &lt;span style=&quot; font-weight:600;&quot;&gt;C:\Users\Me\Documents\Karaoke\&lt;/span&gt;&lt;/p&gt;&lt;p&gt;You can also store your collection on an HTTP server which serves the similar data structure. Please read the documentation how to do this.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
            </property>
           </widget>
          </item>
          <item row="2" column="5">
           <widget class="QPushButton" name="btnBrowseCollection">
            <property name="text">
             <string/>
            </property>
            <property name="icon">
             <iconset resource="resources.qrc">
              <normaloff>:/images/icon_open_file.png</normaloff>:/images/icon_open_file.png</iconset>
            </property>
           </widget>
          </item>
          <item row="2" column="6">
           <widget class="LabelShowHelp" name="label_25">
            <property name="text">
             <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;a href=&quot;background&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#2980b9;&quot;&gt;Help&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
            </property>
            <property name="buddy">
             <cstring>leCollectionPath</cstring>
            </property>
           </widget>
          </item>
          <item row="3" column="0">
           <widget class="QLabel" name="lblHTTPauth">
            <property name="text">
             <string>Authentication infor&amp;mation if needed:</string>
            </property>
            <property name="alignment">
             <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
            </property>
            <property name="buddy">
             <cstring>leCollectionPath</cstring>
            </property>
           </widget>
          </item>
          <item row="3" column="1">
           <widget class="QLineEdit" name="leHTTPuser">
            <property name="placeholderText">
             <string>login</string>
            </property>
           </widget>
          </item>
          <item row="3" column="2" colspan="2">
           <widget class="QLineEdit" name="leHTTPpass">
            <property name="echoMode">
             <enum>QLineEdit::Password</enum>
            </property>
            <property name="placeholderText">
             <string>password</string>
            </property>
           </widget>
          </item>
          <item row="4" column="6">
           <widget class="LabelShowHelp" name="label_26">
            <property name="text">
             <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;a href=&quot;background&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#2980b9;&quot;&gt;Help&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
            </property>
            <property name="buddy">
             <cstring>boxColelctionZIP</cstring>
            </property>
           </widget>
          </item>
          <item row="5" column="6">
           <widget class="LabelShowHelp" name="lblFSdetectLang">
            <property name="text">
             <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;a href=&quot;background&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#2980b9;&quot;&gt;Help&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
            </property>
            <property name="buddy">
             <cstring>boxCollectionDetectLang</cstring>
            </property>
           </widget>
          </item>
          <item row="6" column="0">
           <widget class="QLabel" name="lblCollectionLanguage">
            <property name="text">
             <string>Default &amp;language for undetected songs:</string>
            </property>
            <property name="alignment">
             <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
            </property>
            <property name="buddy">
             <cstring>boxCollectionLanguage</cstring>
            </property>
           </widget>
          </item>
          <item row="6" column="6">
           <widget class="LabelShowHelp" name="label_28">
            <property name="text">
             <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;a href=&quot;background&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#2980b9;&quot;&gt;Help&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
            </property>
            <property name="buddy">
             <cstring>boxCollectionLanguage</cstring>
            </property>
           </widget>
          </item>
          <item row="7" column="0">
           <widget class="QLabel" name="label_14">
            <property name="text">
             <string>Artist and title are separated by:</string>
            </property>
            <property name="alignment">
             <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
            </property>
           </widget>
          </item>
          <item row="7" column="6">
           <widget class="LabelShowHelp" name="label_32">
            <property name="text">
             <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;a href=&quot;background&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#2980b9;&quot;&gt;Help&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
            </property>
            <property name="buddy">
             <cstring>boxCollectionSeparator</cstring>
            </property>
           </widget>
          </item>
          <item row="6" column="1" colspan="5">
           <widget class="QComboBox" name="boxCollectionLanguage">
            <property name="whatsThis">
             <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Sets the language for either all the songs (if detection is disabled), or only for the songs which language is not detected. If you know your collection only contains the songs in certain language, you can set this option and disable the language detection to speed up the scan.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
            </property>
           </widget>
          </item>
          <item row="7" column="1" colspan="5">
           <widget class="QComboBox" name="boxCollectionSeparator">
            <property name="whatsThis">
             <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This option is used for detecting the &lt;span style=&quot; font-weight:600;&quot;&gt;Artist &lt;/span&gt;(Singer, Performer) and &lt;span style=&quot; font-weight:600;&quot;&gt;Title &lt;/span&gt;(Song name) of a Karaoke song. While this information could be sometime obtained from the Karaoke song itself, this information may be not reliable, and is often not available at all (for example for CD+G files). Therefore the only reliable way is to use the file and folder names.&lt;/p&gt;&lt;p&gt;The &amp;quot;A-HA/Take on me&amp;quot; option means the Artist is the folder name. In this case the scanner assumes this folder only contains the songs for this particular artist. The file name of each song in this case is a song title.&lt;/p&gt;&lt;p&gt;The &amp;quot;A-HA - Take on me&amp;quot; option means the information about the Artist and Title is stored in the file name itself. In this case the scanner separates them by a combination of space-dash-space and assumes the left part is artist, and the right part is title. Using a space-dash-space instead of just a dash is important, as using only a dash in the case above would result in the artist name &amp;quot;A&amp;quot; and song title &amp;quot;HA - Take on me&amp;quot;, which would be incorrect.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
            </property>
           </widget>
          </item>
          <item row="5" column="0" colspan="4">
           <widget class="QCheckBox" name="boxCollectionDetectLang">
            <property name="whatsThis">
             <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;The scanner is able to detect the language the Karaoke &lt;span style=&quot; font-weight:600;&quot;&gt;text&lt;/span&gt; lyrics are written into, and store it in the database during the scan. This information will be available during search and browsing, and allows users to look directly for songs in a specific language, for example Chinese, Russian or Italian. This will slow down the scan roughly by 10%.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;This option only works with text lyrics&lt;/span&gt;, and does not work with non-text Karaoke files such as video or CD+G (and the language scanner is not invoked on them). Currenly supported text lyrics formats are KAR, Karafun, LRC and UltraStar.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-style:italic;&quot;&gt;Please note this option controls language detection, and not lyrics encoding detection, which is detected separately and automatically.&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
            </property>
            <property name="text">
             <string>Detect the karaoke song language for text lyrics (seen in browse/search)</string>
            </property>
           </widget>
          </item>
          <item row="1" column="4" colspan="2">
           <spacer name="horizontalSpacer_2">
            <property name="orientation">
             <enum>Qt::Horizontal</enum>
            </property>
            <property name="sizeHint" stdset="0">
             <size>
              <width>195</width>
              <height>29</height>
             </size>
            </property>
           </spacer>
          </item>
          <item row="1" column="1" colspan="3">
           <widget class="QLineEdit" name="leCollectionName">
            <property name="sizePolicy">
             <sizepolicy hsizetype="Expanding" vsizetype="Fixed">
              <horstretch>1</horstretch>
              <verstretch>0</verstretch>
             </sizepolicy>
            </property>
            <property name="whatsThis">
             <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;A name for your collection&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
            </property>
           </widget>
          </item>
          <item row="4" column="0" colspan="5">
           <widget class="QCheckBox" name="boxColelctionZIP">
            <property name="whatsThis">
             <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If you have Karaoke songs which are stored in ZIP archives (typical example would be MP3+G, where an MP3 and associated CD+G file with the same file name are stored in a single ZIP archive), please check this checkbox. This will ensure ZIP files are analyzed during the database scan, and those songs would be available during the search.&lt;/p&gt;&lt;p&gt;However if you do not have any ZIP archives containing Karaoke songs, you can uncheck this box and all ZIP archives would be ignored.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
            </property>
            <property name="text">
             <string>Consider all ZIP archives as possibly containing karaoke songs and analyze them</string>
            </property>
           </widget>
          </item>
          <item row="3" column="4" colspan="2">
           <widget class="QCheckBox" name="boxIgnoreSSLerrors">
            <property name="text">
             <string>Ignore SSL certificate errors</string>
            </property>
           </widget>
          </item>
         </layout>
        </widget>
       </item>
       <item>
        <widget class="QGroupBox" name="groupBox_5">
         <property name="title">
          <string>Paste a path or URL from your collection to see how the artist and title are detected:</string>
         </property>
         <layout class="QVBoxLayout" name="verticalLayout_11">
          <item>
           <layout class="QHBoxLayout" name="horizontalLayout_16">
            <item>
             <widget class="QLabel" name="label_12">
              <property name="text">
               <string>Path/URL:</string>
              </property>
             </widget>
            </item>
            <item>
             <widget class="QLineEdit" name="leArtistTitleTest">
              <property name="sizePolicy">
               <sizepolicy hsizetype="Expanding" vsizetype="Fixed">
                <horstretch>1</horstretch>
                <verstretch>0</verstretch>
               </sizepolicy>
              </property>
             </widget>
            </item>
            <item>
             <widget class="QLabel" name="lblTestArtistTitle">
              <property name="sizePolicy">
               <sizepolicy hsizetype="Expanding" vsizetype="Preferred">
                <horstretch>2</horstretch>
                <verstretch>0</verstretch>
               </sizepolicy>
              </property>
              <property name="text">
               <string>Not detected artist or title</string>
              </property>
              <property name="alignment">
               <set>Qt::AlignCenter</set>
              </property>
             </widget>
            </item>
           </layout>
          </item>
         </layout>
        </widget>
       </item>
       <item>
        <widget class="QGroupBox" name="groupBox_8">
         <property name="title">
          <string>Collection management</string>
         </property>
         <layout class="QHBoxLayout" name="horizontalLayout_17">
          <item>
           <widget class="QLabel" name="lblCollectionInfo">
            <property name="sizePolicy">
             <sizepolicy hsizetype="Preferred" vsizetype="Preferred">
              <horstretch>1</horstretch>
              <verstretch>0</verstretch>
             </sizepolicy>
            </property>
            <property name="text">
             <string/>
            </property>
            <property name="wordWrap">
             <bool>true</bool>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QPushButton" name="btnUpdateCollection">
            <property name="text">
             <string>Update</string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QPushButton" name="btnEraseCollection">
            <property name="text">
             <string>Erase</string>
            </property>
           </widget>
          </item>
         </layout>
        </widget>
       </item>
      </layout>
     </widget>
     <widget class="QWidget" name="tab_2">
      <attribute name="title">
       <string>Background</string>
      </attribute>
      <layout class="QVBoxLayout" name="verticalLayout_7">
       <item>
        <layout class="QHBoxLayout" name="horizontalLayout_10">
         <item>
          <widget class="QLabel" name="label">
           <property name="text">
            <string>Background type:</string>
           </property>
           <property name="buddy">
            <cstring>boxBackgroundType</cstring>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QComboBox" name="boxBackgroundType">
           <property name="sizePolicy">
            <sizepolicy hsizetype="Preferred" vsizetype="Fixed">
             <horstretch>1</horstretch>
             <verstretch>0</verstretch>
            </sizepolicy>
           </property>
           <property name="whatsThis">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;You can specify one of three kinds of background for the player:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;A plain color, meaning the whole screen will be colored in a specific color;&lt;li&gt;An image or set of images. You will specify a directory containing one or more image files, which could be animated and transition to different images (slideshow);&lt;li&gt;A video or set of videos. You will specify a directory containing one or more video files.&lt;/ul&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <item>
            <property name="text">
             <string>Plain color</string>
            </property>
           </item>
           <item>
            <property name="text">
             <string>Image or set of images with transitions</string>
            </property>
           </item>
           <item>
            <property name="text">
             <string>Video or set of videos</string>
            </property>
           </item>
          </widget>
         </item>
         <item>
          <widget class="LabelShowHelp" name="label_2">
           <property name="text">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;a href=&quot;background&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#2980b9;&quot;&gt;Help&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="buddy">
            <cstring>boxBackgroundType</cstring>
           </property>
          </widget>
         </item>
        </layout>
       </item>
       <item>
        <layout class="QHBoxLayout" name="horizontalLayout_9">
         <item>
          <widget class="QLabel" name="label_13">
           <property name="text">
            <string>If a &amp;karaoke song comes with a background (i.e. UltraStar):</string>
           </property>
           <property name="buddy">
            <cstring>rbBackgroundIgnoreCustom</cstring>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QRadioButton" name="rbBackgroundIgnoreCustom">
           <property name="whatsThis">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Certain formats such as KaraFun, UltraStar and MP3+LRC allow the creator to specify a different background image, which is embedded into a file. This option controls which background would be shown when those karaoke files are played:&lt;/p&gt;&lt;p&gt;- If you set it to &amp;quot;&lt;span style=&quot; font-weight:600;&quot;&gt;Ignore it&lt;/span&gt;&amp;quot;, your background will always show on those songs, even if the creator embedded a background image into the Karaoke file.&lt;/p&gt;&lt;p&gt;- If you set it to &amp;quot;&lt;span style=&quot; font-weight:600;&quot;&gt;Use it&lt;/span&gt;&amp;quot;, and the Karaoke file contains a background, it will be shown instead of yours when this song is played.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>I&amp;gnore it</string>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QRadioButton" name="rbBackgroundUseCustom">
           <property name="text">
            <string>&amp;Use it</string>
           </property>
          </widget>
         </item>
         <item>
          <spacer name="horizontalSpacer_4">
           <property name="orientation">
            <enum>Qt::Horizontal</enum>
           </property>
           <property name="sizeHint" stdset="0">
            <size>
             <width>40</width>
             <height>20</height>
            </size>
           </property>
          </spacer>
         </item>
         <item>
          <widget class="LabelShowHelp" name="label_19">
           <property name="text">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;a href=&quot;background&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#2980b9;&quot;&gt;Help&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="buddy">
            <cstring>rbBackgroundIgnoreCustom</cstring>
           </property>
          </widget>
         </item>
        </layout>
       </item>
       <item>
        <layout class="QHBoxLayout" name="horizontalLayout_5">
         <item>
          <widget class="QCheckBox" name="boxCDGtransparent">
           <property name="whatsThis">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;CD+G files come with its own background, which is typically black and fills up the whole screen. Therefore your background images or videos are not shown when CD+G files are played.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;Enabling this option &amp;quot;hacks&amp;quot; the CD+G format by making its background color transparent. This allows your background to be shown even when CD+G files are being played. However some CD+G formats might become difficult to read when this option is enabled.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>Make CD+G background transparent</string>
           </property>
          </widget>
         </item>
         <item>
          <spacer name="horizontalSpacer_3">
           <property name="orientation">
            <enum>Qt::Horizontal</enum>
           </property>
           <property name="sizeHint" stdset="0">
            <size>
             <width>40</width>
             <height>20</height>
            </size>
           </property>
          </spacer>
         </item>
         <item>
          <widget class="LabelShowHelp" name="label_20">
           <property name="text">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;a href=&quot;background&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#2980b9;&quot;&gt;Help&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="buddy">
            <cstring>boxCDGtransparent</cstring>
           </property>
          </widget>
         </item>
        </layout>
       </item>
       <item>
        <widget class="QGroupBox" name="groupBackgroundColor">
         <property name="title">
          <string>Color parameters</string>
         </property>
         <layout class="QHBoxLayout" name="horizontalLayout">
          <item>
           <widget class="QLabel" name="label_15">
            <property name="text">
             <string>Use the following color as background:</string>
            </property>
            <property name="buddy">
             <cstring>btnBackgroundColor</cstring>
            </property>
           </widget>
          </item>
          <item>
           <widget class="ColorButton" name="btnBackgroundColor">
            <property name="whatsThis">
             <string>Preview window text color for the text which has been sung.</string>
            </property>
            <property name="text">
             <string>PushButton</string>
            </property>
           </widget>
          </item>
         </layout>
        </widget>
       </item>
       <item>
        <widget class="QGroupBox" name="groupBackgroundImage">
         <property name="title">
          <string>Image parameters</string>
         </property>
         <layout class="QVBoxLayout" name="verticalLayout_2">
          <item>
           <layout class="QHBoxLayout" name="horizontalLayout_7">
            <item>
             <widget class="QLabel" name="label_16">
              <property name="text">
               <string>Root path to background images:</string>
              </property>
              <property name="buddy">
               <cstring>lePathImages</cstring>
              </property>
             </widget>
            </item>
            <item>
             <widget class="QLineEdit" name="lePathImages">
              <property name="whatsThis">
               <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Please specify the directory containing one or more images (or image directories) in JPG or PNG formats. All those images will be read, and if more than one image is present, they will be shown in a sequence.&lt;/p&gt;&lt;p&gt;Please choose the images carefully - a background image with many different details and bright colors distracts the singer and makes it hard to read the words.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
              </property>
             </widget>
            </item>
            <item>
             <widget class="QPushButton" name="btnBrowseImages">
              <property name="text">
               <string/>
              </property>
              <property name="icon">
               <iconset resource="resources.qrc">
                <normaloff>:/images/icon_open_file.png</normaloff>:/images/icon_open_file.png</iconset>
              </property>
             </widget>
            </item>
            <item>
             <widget class="LabelShowHelp" name="label_21">
              <property name="text">
               <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;a href=&quot;background&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#2980b9;&quot;&gt;Help&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
              </property>
              <property name="buddy">
               <cstring>btnBrowseImages</cstring>
              </property>
             </widget>
            </item>
           </layout>
          </item>
          <item>
           <layout class="QHBoxLayout" name="horizontalLayout_11">
            <item>
             <widget class="QCheckBox" name="boxBackgroundTransitions">
              <property name="text">
               <string>Enable image transition and show each image for at most</string>
              </property>
             </widget>
            </item>
            <item>
             <widget class="QSpinBox" name="spinBackgroundDelay">
              <property name="enabled">
               <bool>false</bool>
              </property>
              <property name="whatsThis">
               <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;The background image shown is typically only changed when the animation sequence ends. This option will also force to change the background image every specified number of seconds. Choose the large number if you have only few images, and a smaller number if you have a lot of images.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
              </property>
              <property name="suffix">
               <string> seconds</string>
              </property>
              <property name="minimum">
               <number>5</number>
              </property>
              <property name="maximum">
               <number>600</number>
              </property>
             </widget>
            </item>
            <item>
             <spacer name="horizontalSpacer_5">
              <property name="orientation">
               <enum>Qt::Horizontal</enum>
              </property>
              <property name="sizeHint" stdset="0">
               <size>
                <width>40</width>
                <height>20</height>
               </size>
              </property>
             </spacer>
            </item>
            <item>
             <widget class="LabelShowHelp" name="label_22">
              <property name="text">
               <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;a href=&quot;background&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#2980b9;&quot;&gt;Help&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
              </property>
              <property name="buddy">
               <cstring>spinBackgroundDelay</cstring>
              </property>
             </widget>
            </item>
           </layout>
          </item>
         </layout>
        </widget>
       </item>
       <item>
        <widget class="QGroupBox" name="groupBackgroundVideo">
         <property name="title">
          <string>Video parameters</string>
         </property>
         <layout class="QHBoxLayout" name="horizontalLayout_12">
          <item>
           <layout class="QHBoxLayout" name="horizontalLayout_8">
            <item>
             <widget class="QLabel" name="label_17">
              <property name="text">
               <string>Root path to background &amp;videos:</string>
              </property>
              <property name="buddy">
               <cstring>lePathVideos</cstring>
              </property>
             </widget>
            </item>
            <item>
             <widget class="QLineEdit" name="lePathVideos">
              <property name="whatsThis">
               <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Please specify the directory containing one or more video files (or directories with video files) in AVI, MP4 or MKV formats. All those videos will be read, and if more than one video is present, they will be shown in an order.&lt;/p&gt;&lt;p&gt;Please choose the videos carefully - a fast-pacing background video with a lot of actions and bright colors distracts the singer and makes it hard to read the words.&lt;/p&gt;&lt;p&gt;The background video may have sound, but it will be muted by the Player.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
              </property>
             </widget>
            </item>
            <item>
             <widget class="QPushButton" name="btnBrowseVideos">
              <property name="text">
               <string/>
              </property>
              <property name="icon">
               <iconset>
                <normaloff>images/icon_open_file.png</normaloff>images/icon_open_file.png</iconset>
              </property>
             </widget>
            </item>
            <item>
             <widget class="LabelShowHelp" name="label_23">
              <property name="text">
               <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;a href=&quot;background&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#2980b9;&quot;&gt;Help&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
              </property>
              <property name="buddy">
               <cstring>lePathVideos</cstring>
              </property>
             </widget>
            </item>
           </layout>
          </item>
         </layout>
        </widget>
       </item>
       <item>
        <spacer name="verticalSpacer_4">
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>20</width>
           <height>40</height>
          </size>
         </property>
        </spacer>
       </item>
      </layout>
     </widget>
     <widget class="QWidget" name="tab_3">
      <attribute name="title">
       <string>Player</string>
      </attribute>
      <layout class="QVBoxLayout" name="verticalLayout_4">
       <item>
        <widget class="QGroupBox" name="groupCDG_2">
         <property name="title">
          <string>Text lyrics rendering</string>
         </property>
         <layout class="QVBoxLayout" name="verticalLayout_3">
          <item>
           <layout class="QHBoxLayout" name="horizontalLayout_4">
            <item>
             <widget class="QLabel" name="label_24">
              <property name="text">
               <string>Font:</string>
              </property>
              <property name="buddy">
               <cstring>fontPlayerLyrics</cstring>
              </property>
             </widget>
            </item>
            <item>
             <widget class="QFontComboBox" name="fontPlayerLyrics">
              <property name="sizePolicy">
               <sizepolicy hsizetype="Preferred" vsizetype="Fixed">
                <horstretch>1</horstretch>
                <verstretch>0</verstretch>
               </sizepolicy>
              </property>
              <property name="whatsThis">
               <string>Font family for preview window</string>
              </property>
             </widget>
            </item>
            <item>
             <widget class="QLabel" name="label_4">
              <property name="text">
               <string>Screen should fit at least</string>
              </property>
              <property name="buddy">
               <cstring>spinMaxLyricFontLines</cstring>
              </property>
             </widget>
            </item>
            <item>
             <widget class="QSpinBox" name="spinMaxLyricFontLines">
              <property name="whatsThis">
               <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;The player will automatically detect the maximum possible font size, and will use the largest font which will fit the longest line of the song. However if the song has very short sentences, this will result in having letters of half-screen size which will be constantly moving, making singing difficult. Using this setting it is possible to restrict the maximum font size so the font will stay small enough to fit the requested number of lines in a screen.&lt;/p&gt;&lt;p&gt;The value depends on your screen resolution; to get the best value, please try the songs which have short lyric sentences. For 1920x1080 HDMI the reasonable number is between 4 and 8 lines.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
              </property>
              <property name="suffix">
               <string> lines</string>
              </property>
              <property name="minimum">
               <number>1</number>
              </property>
              <property name="maximum">
               <number>30</number>
              </property>
              <property name="value">
               <number>4</number>
              </property>
             </widget>
            </item>
            <item>
             <widget class="LabelShowHelp" name="label_41">
              <property name="text">
               <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;a href=&quot;background&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#2980b9;&quot;&gt;Help&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
              </property>
              <property name="buddy">
               <cstring>spinMaxLyricFontLines</cstring>
              </property>
             </widget>
            </item>
           </layout>
          </item>
          <item>
           <widget class="QGroupBox" name="groupBox_7">
            <property name="title">
             <string>Colors</string>
            </property>
            <layout class="QGridLayout" name="gridLayout">
             <item row="0" column="0">
              <widget class="QLabel" name="label_33">
               <property name="text">
                <string>Top scrolling line</string>
               </property>
               <property name="alignment">
                <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
               </property>
               <property name="buddy">
                <cstring>btnPlayerLyricsNotification</cstring>
               </property>
              </widget>
             </item>
             <item row="0" column="1">
              <widget class="ColorButton" name="btnPlayerLyricsNotification">
               <property name="sizePolicy">
                <sizepolicy hsizetype="Minimum" vsizetype="Fixed">
                 <horstretch>1</horstretch>
                 <verstretch>0</verstretch>
                </sizepolicy>
               </property>
               <property name="whatsThis">
                <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This color will be used for the top notification scrolling line text.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
               </property>
               <property name="text">
                <string>PushButton</string>
               </property>
              </widget>
             </item>
             <item row="0" column="2">
              <widget class="LabelShowHelp" name="label_37">
               <property name="text">
                <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;a href=&quot;background&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#2980b9;&quot;&gt;Help&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
               </property>
               <property name="buddy">
                <cstring>btnPlayerLyricsNotification</cstring>
               </property>
              </widget>
             </item>
             <item row="0" column="3">
              <spacer name="horizontalSpacer_6">
               <property name="orientation">
                <enum>Qt::Horizontal</enum>
               </property>
               <property name="sizeHint" stdset="0">
                <size>
                 <width>183</width>
                 <height>20</height>
                </size>
               </property>
              </spacer>
             </item>
             <item row="0" column="4">
              <widget class="QLabel" name="label_29">
               <property name="text">
                <string>On-screen information</string>
               </property>
               <property name="alignment">
                <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
               </property>
               <property name="buddy">
                <cstring>btnPlayerLyricsInfo</cstring>
               </property>
              </widget>
             </item>
             <item row="0" column="5">
              <widget class="ColorButton" name="btnPlayerLyricsInfo">
               <property name="sizePolicy">
                <sizepolicy hsizetype="Minimum" vsizetype="Fixed">
                 <horstretch>1</horstretch>
                 <verstretch>0</verstretch>
                </sizepolicy>
               </property>
               <property name="whatsThis">
                <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This color will be used for on-screen (not top) information messages.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
               </property>
               <property name="text">
                <string>PushButton</string>
               </property>
              </widget>
             </item>
             <item row="0" column="6">
              <widget class="LabelShowHelp" name="label_39">
               <property name="sizePolicy">
                <sizepolicy hsizetype="Minimum" vsizetype="Preferred">
                 <horstretch>0</horstretch>
                 <verstretch>0</verstretch>
                </sizepolicy>
               </property>
               <property name="text">
                <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;a href=&quot;background&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#2980b9;&quot;&gt;Help&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
               </property>
               <property name="buddy">
                <cstring>btnPlayerLyricsInfo</cstring>
               </property>
              </widget>
             </item>
             <item row="1" column="0">
              <widget class="QLabel" name="label_30">
               <property name="text">
                <string>&amp;Lyrics already sung</string>
               </property>
               <property name="alignment">
                <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
               </property>
               <property name="buddy">
                <cstring>btnPlayerLyricsPast</cstring>
               </property>
              </widget>
             </item>
             <item row="1" column="1">
              <widget class="ColorButton" name="btnPlayerLyricsPast">
               <property name="sizePolicy">
                <sizepolicy hsizetype="Minimum" vsizetype="Fixed">
                 <horstretch>1</horstretch>
                 <verstretch>0</verstretch>
                </sizepolicy>
               </property>
               <property name="whatsThis">
                <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Color of lyrics which have been sung already.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
               </property>
               <property name="text">
                <string>PushButton</string>
               </property>
              </widget>
             </item>
             <item row="1" column="2">
              <widget class="LabelShowHelp" name="label_38">
               <property name="whatsThis">
                <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This color will be used to show the lyrics which were already sung.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
               </property>
               <property name="text">
                <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;a href=&quot;background&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#2980b9;&quot;&gt;Help&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
               </property>
               <property name="buddy">
                <cstring>btnPlayerLyricsPast</cstring>
               </property>
              </widget>
             </item>
             <item row="1" column="3">
              <spacer name="horizontalSpacer_7">
               <property name="orientation">
                <enum>Qt::Horizontal</enum>
               </property>
               <property name="sizeHint" stdset="0">
                <size>
                 <width>183</width>
                 <height>20</height>
                </size>
               </property>
              </spacer>
             </item>
             <item row="1" column="4">
              <widget class="QLabel" name="label_31">
               <property name="text">
                <string>Lyrics not sung &amp;yet</string>
               </property>
               <property name="alignment">
                <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
               </property>
               <property name="buddy">
                <cstring>btnPlayerLyricsFuture</cstring>
               </property>
              </widget>
             </item>
             <item row="1" column="5">
              <widget class="ColorButton" name="btnPlayerLyricsFuture">
               <property name="sizePolicy">
                <sizepolicy hsizetype="Minimum" vsizetype="Fixed">
                 <horstretch>1</horstretch>
                 <verstretch>0</verstretch>
                </sizepolicy>
               </property>
               <property name="whatsThis">
                <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Color of lyrics which are not sung yet (future lyrics)&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
               </property>
               <property name="text">
                <string>PushButton</string>
               </property>
              </widget>
             </item>
             <item row="1" column="6">
              <widget class="LabelShowHelp" name="label_40">
               <property name="sizePolicy">
                <sizepolicy hsizetype="Minimum" vsizetype="Preferred">
                 <horstretch>0</horstretch>
                 <verstretch>0</verstretch>
                </sizepolicy>
               </property>
               <property name="text">
                <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;a href=&quot;background&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#2980b9;&quot;&gt;Help&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
               </property>
               <property name="buddy">
                <cstring>btnPlayerLyricsFuture</cstring>
               </property>
              </widget>
             </item>
             <item row="2" column="0">
              <widget class="QLabel" name="label_34">
               <property name="text">
                <string>Lyrics spotlight</string>
               </property>
               <property name="alignment">
                <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
               </property>
               <property name="buddy">
                <cstring>btnPlayerLyricsSpotlight</cstring>
               </property>
              </widget>
             </item>
             <item row="2" column="1">
              <widget class="ColorButton" name="btnPlayerLyricsSpotlight">
               <property name="sizePolicy">
                <sizepolicy hsizetype="Minimum" vsizetype="Fixed">
                 <horstretch>1</horstretch>
                 <verstretch>0</verstretch>
                </sizepolicy>
               </property>
               <property name="whatsThis">
                <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Color of lyrics in the spotlight - the tiny spot where the song is currently being played.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
               </property>
               <property name="text">
                <string>PushButton</string>
               </property>
              </widget>
             </item>
             <item row="2" column="2">
              <widget class="LabelShowHelp" name="label_49">
               <property name="whatsThis">
                <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This color will be used to show the lyrics which were already sung.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
               </property>
               <property name="text">
                <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;a href=&quot;background&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#2980b9;&quot;&gt;Help&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
               </property>
               <property name="buddy">
                <cstring>btnPlayerLyricsSpotlight</cstring>
               </property>
              </widget>
             </item>
             <item row="2" column="3">
              <spacer name="horizontalSpacer_8">
               <property name="orientation">
                <enum>Qt::Horizontal</enum>
               </property>
               <property name="sizeHint" stdset="0">
                <size>
                 <width>179</width>
                 <height>28</height>
                </size>
               </property>
              </spacer>
             </item>
             <item row="2" column="4">
              <widget class="QLabel" name="label_145">
               <property name="text">
                <string>Tint background by</string>
               </property>
               <property name="alignment">
                <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
               </property>
               <property name="buddy">
                <cstring>lyricBackgroundTransparency</cstring>
               </property>
              </widget>
             </item>
             <item row="2" column="6">
              <widget class="LabelShowHelp" name="label_146">
               <property name="whatsThis">
                <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This color will be used to show the lyrics which were already sung.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
               </property>
               <property name="text">
                <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;a href=&quot;background&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#2980b9;&quot;&gt;Help&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
               </property>
               <property name="buddy">
                <cstring>lyricBackgroundTransparency</cstring>
               </property>
              </widget>
             </item>
             <item row="2" column="5">
              <widget class="QSpinBox" name="lyricBackgroundTransparency">
               <property name="whatsThis">
                <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Specifies how much to &amp;quot;tint&amp;quot; the background when playing Karaoke. This helps you to see the lyrics better, but makes the background less visible. The value could be in range of 0% (background is fully transparent) to 100% (background is fully tinted, i.e. dark).&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
               </property>
               <property name="suffix">
                <string> %</string>
               </property>
               <property name="prefix">
                <string/>
               </property>
               <property name="maximum">
                <number>100</number>
               </property>
              </widget>
             </item>
            </layout>
           </widget>
          </item>
         </layout>
        </widget>
       </item>
       <item>
        <widget class="QGroupBox" name="groupRenderingExample">
         <property name="sizePolicy">
          <sizepolicy hsizetype="Preferred" vsizetype="Preferred">
           <horstretch>0</horstretch>
           <verstretch>1</verstretch>
          </sizepolicy>
         </property>
         <property name="title">
          <string>Text rendering example</string>
         </property>
         <layout class="QVBoxLayout" name="verticalLayout_10">
          <item>
           <widget class="QLabel" name="lblTextRenderingExample">
            <property name="text">
             <string>TextLabel</string>
            </property>
           </widget>
          </item>
         </layout>
        </widget>
       </item>
       <item>
        <spacer name="verticalSpacer_3">
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>20</width>
           <height>40</height>
          </size>
         </property>
        </spacer>
       </item>
      </layout>
     </widget>
     <widget class="QWidget" name="tab_5">
      <attribute name="title">
       <string>Music</string>
      </attribute>
      <layout class="QVBoxLayout" name="verticalLayout_6">
       <item>
        <layout class="QHBoxLayout" name="horizontalLayout_3">
         <item>
          <widget class="QCheckBox" name="boxMusicEnable">
           <property name="whatsThis">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If you are using this player as a Karaoke machine for guest entertainment, you probably want it to play something even when nobody is singing. This attracts people's attention to the machine, and makes them more eager to sing.&lt;/p&gt;&lt;p&gt;If this option is enabled, the player will play the music from the directory of your choice when no Karaoke is being played. The music will start when the queue is empty, and will automatically pause as soon as new songs are put into the queue. The music will resume once the queue is empty again.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>Enable the music player, which plays music when the queue is empty</string>
           </property>
          </widget>
         </item>
         <item>
          <widget class="LabelShowHelp" name="label_43">
           <property name="text">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;a href=&quot;background&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#2980b9;&quot;&gt;Help&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="buddy">
            <cstring>boxMusicEnable</cstring>
           </property>
          </widget>
         </item>
        </layout>
       </item>
       <item>
        <widget class="QGroupBox" name="groupMusicPlayer">
         <property name="enabled">
          <bool>false</bool>
         </property>
         <property name="title">
          <string>Music player parameters</string>
         </property>
         <layout class="QGridLayout" name="gridLayout_4">
          <item row="0" column="0">
           <widget class="QLabel" name="label_5">
            <property name="text">
             <string>Music files directory root:</string>
            </property>
           </widget>
          </item>
          <item row="0" column="1" colspan="5">
           <widget class="QLineEdit" name="leMusicPath">
            <property name="whatsThis">
             <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;The player will look up for the music files in this directory. The supported music files could be in MP3, OGG, FLAC or WMA formats. The player will also look in all subdirectories, if any. This lookup happens when the player starts, so please make sure this directory contains a limited number of files.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
            </property>
           </widget>
          </item>
          <item row="0" column="7">
           <widget class="LabelShowHelp" name="label_47">
            <property name="text">
             <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;a href=&quot;background&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#2980b9;&quot;&gt;Help&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
            </property>
            <property name="buddy">
             <cstring>leMusicPath</cstring>
            </property>
           </widget>
          </item>
          <item row="1" column="0">
           <widget class="QLabel" name="label_8">
            <property name="text">
             <string>Play the music from this directory:</string>
            </property>
           </widget>
          </item>
          <item row="1" column="1" colspan="3">
           <widget class="QRadioButton" name="rbMusicRandomOrder">
            <property name="whatsThis">
             <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This option controls the order the music files are played.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
            </property>
            <property name="text">
             <string>in random order</string>
            </property>
            <property name="checked">
             <bool>true</bool>
            </property>
           </widget>
          </item>
          <item row="1" column="4" colspan="3">
           <widget class="QRadioButton" name="rbMusicSortOrder">
            <property name="text">
             <string>a&amp;lphabetically ordered</string>
            </property>
           </widget>
          </item>
          <item row="1" column="7">
           <widget class="LabelShowHelp" name="label_48">
            <property name="text">
             <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;a href=&quot;background&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#2980b9;&quot;&gt;Help&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
            </property>
            <property name="buddy">
             <cstring>rbMusicRandomOrder</cstring>
            </property>
           </widget>
          </item>
          <item row="2" column="0" colspan="2">
           <widget class="QCheckBox" name="boxMusicCrossfade">
            <property name="text">
             <string>Cross-fade the music and karaoke for</string>
            </property>
           </widget>
          </item>
          <item row="2" column="2">
           <widget class="QSpinBox" name="spinMusicCrossfadeDelay">
            <property name="enabled">
             <bool>false</bool>
            </property>
            <property name="whatsThis">
             <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If this option is enabled, the music will cross-fade (i.e. its volume will turn down graduately) for the specified number of seconds before starting playing the Karaoke. After Karaoke ends, the music will also increase back into the desired volume graduately. This makes the appearance more professional, and such setup is typical in professional Karaoke shows.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
            </property>
            <property name="suffix">
             <string> seconds</string>
            </property>
            <property name="minimum">
             <number>1</number>
            </property>
            <property name="maximum">
             <number>10</number>
            </property>
           </widget>
          </item>
          <item row="2" column="3">
           <widget class="LabelShowHelp" name="label_50">
            <property name="text">
             <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;a href=&quot;background&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#2980b9;&quot;&gt;Help&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
            </property>
            <property name="buddy">
             <cstring>spinMusicCrossfadeDelay</cstring>
            </property>
           </widget>
          </item>
          <item row="0" column="6">
           <widget class="QPushButton" name="btnBrowseMusic">
            <property name="text">
             <string/>
            </property>
            <property name="icon">
             <iconset resource="resources.qrc">
              <normaloff>:/images/icon_open_file.png</normaloff>:/images/icon_open_file.png</iconset>
            </property>
           </widget>
          </item>
         </layout>
        </widget>
       </item>
       <item>
        <spacer name="verticalSpacer_6">
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>20</width>
           <height>40</height>
          </size>
         </property>
        </spacer>
       </item>
      </layout>
     </widget>
     <widget class="QWidget" name="tab_4">
      <attribute name="title">
       <string>Misc</string>
      </attribute>
      <layout class="QVBoxLayout" name="verticalLayout_5">
       <item>
        <widget class="QGroupBox" name="groupBox_3">
         <property name="title">
          <string>Song queueing and rotation</string>
         </property>
         <layout class="QVBoxLayout" name="verticalLayout_9">
          <item>
           <layout class="QHBoxLayout" name="horizontalLayout_6">
            <item>
             <widget class="QLabel" name="label_11">
              <property name="text">
               <string>New singers are added at:</string>
              </property>
             </widget>
            </item>
            <item>
             <widget class="QRadioButton" name="rbQueueNewStart">
              <property name="text">
               <string>next in the &amp;queue</string>
              </property>
             </widget>
            </item>
            <item>
             <widget class="QRadioButton" name="rbQueueNewEnd">
              <property name="whatsThis">
               <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This option controld queuing when a new singer joins an existing rotation and adds a song the first time. Consider the following three-singer queue in which singer Adam wants to add a song &amp;quot;It is mine&amp;quot;:&lt;/p&gt;&lt;p&gt;&amp;quot;Another day&amp;quot; by John&lt;br/&gt;&amp;quot;My way&amp;quot; by Sam&lt;br/&gt;&amp;quot;Here she is&amp;quot; by Stasy&lt;br/&gt;&amp;quot;Second night&amp;quot; by John&lt;/p&gt;&lt;p&gt;If the &lt;span style=&quot; font-weight:600;&quot;&gt;next in queue&lt;/span&gt; option is selected, the new singer will be put next, and the queue would be:&lt;/p&gt;&lt;p&gt;&amp;quot;Another day&amp;quot; by John&lt;br/&gt;&lt;span style=&quot; color:#ff0000;&quot;&gt;&amp;quot;It is mine&amp;quot; by Adam&lt;/span&gt;&lt;br/&gt;&amp;quot;My way&amp;quot; by Sam&lt;br/&gt;&amp;quot;Here she is&amp;quot; by Stasy&lt;br/&gt;&amp;quot;Second night&amp;quot; by John&lt;/p&gt;&lt;p&gt;However if &lt;span style=&quot; font-weight:600;&quot;&gt;at the end of rotation&lt;/span&gt; option is selected, the new singers will be added at the end of rotation, so the queue would be:&lt;/p&gt;&lt;p&gt;&amp;quot;Another day&amp;quot; by John&lt;br/&gt;&amp;quot;My way&amp;quot; by Sam&lt;br/&gt;&amp;quot;Here she is&amp;quot; by Stasy&lt;br/&gt;&lt;span style=&quot; color:#ff0000;&quot;&gt;&amp;quot;It is mine&amp;quot; by Adam&lt;/span&gt;&lt;br/&gt;&amp;quot;Second night&amp;quot; by John&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
              </property>
              <property name="text">
               <string>at the end of the rotation</string>
              </property>
             </widget>
            </item>
            <item>
             <widget class="LabelShowHelp" name="label_42">
              <property name="text">
               <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;a href=&quot;background&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#2980b9;&quot;&gt;Help&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
              </property>
              <property name="buddy">
               <cstring>rbQueueNewEnd</cstring>
              </property>
             </widget>
            </item>
            <item>
             <spacer name="horizontalSpacer">
              <property name="orientation">
               <enum>Qt::Horizontal</enum>
              </property>
              <property name="sizeHint" stdset="0">
               <size>
                <width>70</width>
                <height>20</height>
               </size>
              </property>
             </spacer>
            </item>
           </layout>
          </item>
          <item>
           <layout class="QHBoxLayout" name="horizontalLayout_15">
            <item>
             <widget class="QCheckBox" name="boxSaveQueueOnExit">
              <property name="whatsThis">
               <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If this option is checked, the player will save the queue upon exit, and will load it upon start. This means that if you restart the player, the queue will be saved.&lt;/p&gt;&lt;p&gt;If this option is not checked, the player will only load the queue if it crashed. Otherwise it will start with an empty queue.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
              </property>
              <property name="text">
               <string>Save the current singer queue when the application exits</string>
              </property>
             </widget>
            </item>
            <item>
             <widget class="LabelShowHelp" name="label_46">
              <property name="text">
               <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;a href=&quot;background&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#2980b9;&quot;&gt;Help&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
              </property>
              <property name="buddy">
               <cstring>boxSaveQueueOnExit</cstring>
              </property>
             </widget>
            </item>
            <item>
             <spacer name="horizontalSpacer_10">
              <property name="orientation">
               <enum>Qt::Horizontal</enum>
              </property>
              <property name="sizeHint" stdset="0">
               <size>
                <width>40</width>
                <height>20</height>
               </size>
              </property>
             </spacer>
            </item>
           </layout>
          </item>
         </layout>
        </widget>
       </item>
       <item>
        <widget class="QGroupBox" name="groupBox_4">
         <property name="title">
          <string>Web interface</string>
         </property>
         <layout class="QHBoxLayout" name="horizontalLayout_14">
          <item>
           <widget class="QCheckBox" name="boxWebEnable">
            <property name="whatsThis">
             <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This option enables built-in Web interface which allows the users to browse, search and (if &lt;span style=&quot; font-weight:600;&quot;&gt;Allow queueing songs&lt;/span&gt; is checked) add the songs into the rotation from their laptops or phones.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
            </property>
            <property name="text">
             <string>Enable Web interface</string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="LabelShowHelp" name="label_44">
            <property name="text">
             <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;a href=&quot;background&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#2980b9;&quot;&gt;Help&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
            </property>
            <property name="buddy">
             <cstring>boxWebEnable</cstring>
            </property>
           </widget>
          </item>
          <item>
           <spacer name="horizontalSpacer_9">
            <property name="orientation">
             <enum>Qt::Horizontal</enum>
            </property>
            <property name="sizeHint" stdset="0">
             <size>
              <width>252</width>
              <height>20</height>
             </size>
            </property>
           </spacer>
          </item>
          <item>
           <widget class="QCheckBox" name="boxWebAllowAddSong">
            <property name="enabled">
             <bool>false</bool>
            </property>
            <property name="text">
             <string>Allow queueing songs</string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="LabelShowHelp" name="label_45">
            <property name="text">
             <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;a href=&quot;background&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#2980b9;&quot;&gt;Help&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
            </property>
            <property name="buddy">
             <cstring>boxWebAllowAddSong</cstring>
            </property>
           </widget>
          </item>
         </layout>
        </widget>
       </item>
       <item>
        <widget class="QGroupBox" name="groupLIRC">
         <property name="title">
          <string>LIRC setup</string>
         </property>
         <layout class="QGridLayout" name="gridLayout_3">
          <item row="1" column="1">
           <widget class="QLineEdit" name="leLIRCmapping">
            <property name="enabled">
             <bool>false</bool>
            </property>
           </widget>
          </item>
          <item row="0" column="0">
           <widget class="QCheckBox" name="boxLIRCenable">
            <property name="text">
             <string>Enable LIRC, and use the following device:</string>
            </property>
           </widget>
          </item>
          <item row="0" column="1">
           <widget class="QLineEdit" name="leLIRCdevice">
            <property name="enabled">
             <bool>false</bool>
            </property>
           </widget>
          </item>
          <item row="1" column="0">
           <widget class="QLabel" name="label_10">
            <property name="text">
             <string>Remote buttons to actions mapping file:</string>
            </property>
            <property name="alignment">
             <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
            </property>
           </widget>
          </item>
          <item row="1" column="2">
           <widget class="QPushButton" name="btnBrowseLIRCmapping">
            <property name="enabled">
             <bool>false</bool>
            </property>
            <property name="text">
             <string/>
            </property>
            <property name="icon">
             <iconset>
              <normaloff>images/icon_open_file.png</normaloff>images/icon_open_file.png</iconset>
            </property>
           </widget>
          </item>
         </layout>
        </widget>
       </item>
       <item>
        <widget class="QGroupBox" name="groupBox_9">
         <property name="title">
          <string>Advanced</string>
         </property>
         <layout class="QHBoxLayout" name="horizontalLayout_18">
          <item>
           <widget class="QLabel" name="label_3">
            <property name="text">
             <string>MIDI player:</string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QRadioButton" name="rbMidiBuiltin">
            <property name="text">
             <string>b&amp;uilt-in</string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QRadioButton" name="rbMidiNative">
            <property name="whatsThis">
             <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;The multimedia API for most operating systems does not come with a MIDI player. While GStreamer framework the player is using supports most popular MIDI software synthesers (such as Timidity, Fluidsynth and Wildmidi), setting them up is a non-trivial task. Especially on Windows, but even on Linux several distributions (such as OpenSuSE Leap) are bundled with GStreamer which has no MIDI packages prebuilt.&lt;/p&gt;&lt;p&gt;To compensate for this lack of functionality, the player comes with built-in MIDI syntheser, and is able to play MIDI files without any external support. The sound is good, but of course using large soundfonts it is possible to make it better. If you want a better sound, and went through the pain of configuring native MIDI playback through GStreamer, please choose the &amp;quot;GStreamer&amp;quot; option. Otherwise please keep the &amp;quot;built-in&amp;quot; option set.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
            </property>
            <property name="text">
             <string>&amp;GStreamer</string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="LabelShowHelp" name="label_36">
            <property name="text">
             <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;a href=&quot;background&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#2980b9;&quot;&gt;Help&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
            </property>
            <property name="buddy">
             <cstring>rbMidiNative</cstring>
            </property>
           </widget>
          </item>
          <item>
           <spacer name="horizontalSpacer_11">
            <property name="orientation">
             <enum>Qt::Horizontal</enum>
            </property>
            <property name="sizeHint" stdset="0">
             <size>
              <width>40</width>
              <height>20</height>
             </size>
            </property>
           </spacer>
          </item>
          <item>
           <widget class="QLabel" name="label_9">
            <property name="text">
             <string>Music-lyrics delay:</string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QSpinBox" name="spinLyricDelay">
            <property name="whatsThis">
             <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If your computer is connected to TV and to amplifier using different cables, and you use an amplifier with digital processing, it might add a delay. Some HDMI cables also add delay for sound channel, which results in all lyrics being a little earlier, or a little later.&lt;/p&gt;&lt;p&gt;If this is the case with your equipment, adjusting this value will help. Increase the value to increase the music-lyrics delay (means lyrics would show later), and decrease the value to have the lyrics shown earlier. The value is in milliseconds.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
            </property>
            <property name="suffix">
             <string> ms</string>
            </property>
            <property name="prefix">
             <string/>
            </property>
            <property name="minimum">
             <number>-2000</number>
            </property>
            <property name="maximum">
             <number>2000</number>
            </property>
           </widget>
          </item>
          <item>
           <widget class="LabelShowHelp" name="label_35">
            <property name="text">
             <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;a href=&quot;background&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#2980b9;&quot;&gt;Help&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
            </property>
            <property name="buddy">
             <cstring>spinLyricDelay</cstring>
            </property>
           </widget>
          </item>
         </layout>
        </widget>
       </item>
       <item>
        <widget class="QCheckBox" name="boxForceFullScreen">
         <property name="text">
          <string>Always start in full screen</string>
         </property>
        </widget>
       </item>
       <item>
        <spacer name="verticalSpacer_2">
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>20</width>
           <height>40</height>
          </size>
         </property>
        </spacer>
       </item>
      </layout>
     </widget>
    </widget>
   </item>
   <item>
    <spacer name="verticalSpacer">
     <property name="orientation">
      <enum>Qt::Vertical</enum>
     </property>
     <property name="sizeHint" stdset="0">
      <size>
       <width>20</width>
       <height>40</height>
      </size>
     </property>
    </spacer>
   </item>
   <item>
    <widget class="QDialogButtonBox" name="buttonBox">
     <property name="orientation">
      <enum>Qt::Horizontal</enum>
     </property>
     <property name="standardButtons">
      <set>QDialogButtonBox::Cancel|QDialogButtonBox::Ok</set>
     </property>
    </widget>
   </item>
  </layout>
 </widget>
 <customwidgets>
  <customwidget>
   <class>ColorButton</class>
   <extends>QPushButton</extends>
   <header>colorbutton.h</header>
  </customwidget>
  <customwidget>
   <class>LabelShowHelp</class>
   <extends>QLabel</extends>
   <header>labelshowhelp.h</header>
  </customwidget>
 </customwidgets>
 <resources>
  <include location="resources.qrc"/>
 </resources>
 <connections>
  <connection>
   <sender>buttonBox</sender>
   <signal>accepted()</signal>
   <receiver>SettingsDialog</receiver>
   <slot>accept()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>185</x>
     <y>497</y>
    </hint>
    <hint type="destinationlabel">
     <x>157</x>
     <y>274</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>buttonBox</sender>
   <signal>rejected()</signal>
   <receiver>SettingsDialog</receiver>
   <slot>reject()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>185</x>
     <y>497</y>
    </hint>
    <hint type="destinationlabel">
     <x>286</x>
     <y>274</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>boxBackgroundTransitions</sender>
   <signal>toggled(bool)</signal>
   <receiver>spinBackgroundDelay</receiver>
   <slot>setEnabled(bool)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>153</x>
     <y>326</y>
    </hint>
    <hint type="destinationlabel">
     <x>504</x>
     <y>309</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>boxWebEnable</sender>
   <signal>toggled(bool)</signal>
   <receiver>boxWebAllowAddSong</receiver>
   <slot>setEnabled(bool)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>131</x>
     <y>200</y>
    </hint>
    <hint type="destinationlabel">
     <x>567</x>
     <y>182</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>boxMusicEnable</sender>
   <signal>toggled(bool)</signal>
   <receiver>groupMusicPlayer</receiver>
   <slot>setEnabled(bool)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>121</x>
     <y>49</y>
    </hint>
    <hint type="destinationlabel">
     <x>159</x>
     <y>74</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>boxMusicCrossfade</sender>
   <signal>toggled(bool)</signal>
   <receiver>spinMusicCrossfadeDelay</receiver>
   <slot>setEnabled(bool)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>204</x>
     <y>183</y>
    </hint>
    <hint type="destinationlabel">
     <x>341</x>
     <y>191</y>
    </hint>
   </hints>
  </connection>
 </connections>
 <slots>
  <slot>showHelp()</slot>
 </slots>
</ui>
